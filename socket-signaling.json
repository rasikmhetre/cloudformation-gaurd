{
  "Parameters": {
    "NetworkStack": {
      "Description": "Name of the stack that this stack references for networking and shared resources",
      "Default": "",
      "Type": "String"
    },
    "CleverTapProdDotComHostedZoneId": {
      "Description": "used for route 53",
      "Type": "String"
      },
      "ProdDomainName": {
        "Description": "used for route 53",
        "Default": "clevertap-prod.com",
        "Type": "String"
    }
  },
  "Conditions": {
    "StackIsSk1": {
      "Fn::Equals": [
        {
          "Ref": "NetworkStack"
        },
        "sk1"
      ]
    },
    "StackNameIsIn1SsSwiggy1":  {
      "Fn::Equals": [
        {
          "Ref": "AWS::StackName"
        },
        "in1-Ss-Swiggy-1"
      ]
    }
  },
  "Resources": {
    "SocketSignalingV3EcsCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {}
    },
    "SocketSignalingCertificateManagerCertificate": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "NetworkStack"
              },
              {
                "Fn::If": [
                  "StackNameIsIn1SsSwiggy1",
                  "swiggy-socket-signaling",
                  "socket-signaling"
                ]
              },
              {
                "Ref": "ProdDomainName"
              }
            ]
          ]
        },
        "DomainValidationOptions": [
          {
            "DomainName": {
              "Fn::Join": [
                ".",
                [
                  {
                    "Ref": "NetworkStack"
                  },
                  {
                    "Fn::If": [
                      "StackNameIsIn1SsSwiggy1",
                      "swiggy-socket-signaling",
                      "socket-signaling"
                    ]
                  },
                  {
                    "Ref": "ProdDomainName"
                  }
                ]
              ]
            },
            "HostedZoneId": {
              "Ref": "CleverTapProdDotComHostedZoneId"
            }
          }
        ],
        "ValidationMethod": "DNS"
      }
    },
    "SocketSignalingDotClevertapProdDotComRoute53RecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneId": {
          "Ref": "CleverTapProdDotComHostedZoneId"
        },
        "Name": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "NetworkStack"
              },
              {
                "Fn::If": [
                  "StackNameIsIn1SsSwiggy1",
                  "swiggy-socket-signaling",
                  "socket-signaling"
                ]
              },
              {
                "Ref": "ProdDomainName"
              }
            ]
          ]
        },
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "SocketSignalingV3ElasticLoadBalancingV2LoadBalancer",
              "DNSName"
            ]
          }
        ],
        "TTL": "300",
        "Type": "CNAME"
      }
    },
    "SocketSignalingMongoPasswordSecretsManagerSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": {
          "Fn::Sub": "This is a Secrets Manager secret for ${AWS::StackName}-SocketSignalingMongoPasswordSecretsManagerSecret"
        },
        "SecretString": "{\"socketsignaling\":\"replaceme\"}"
      }
    },
    "SocketSignalingV3ElasticLoadBalancingV2LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "LoadBalancerAttributes":[
          {
            "Key":"idle_timeout.timeout_seconds",
            "Value":"600"
          }
        ],
        "SecurityGroups": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStack}-SecurityGroup-SocketSignalingLoadbalancerEC2SecurityGroupId"
            }
          }
        ],
        "Subnets": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStack}-LoadBalancer1aEc2SubnetId"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStack}-LoadBalancer1bEc2SubnetId"
            }
          },
          {
            "Fn::If": [
              "StackIsSk1",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${NetworkStack}-LoadBalancer1cEc2SubnetId"
                }
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                ".",
                [
                  {
                    "Ref": "NetworkStack"
                  },
                  {
                    "Fn::If": [
                      "StackNameIsIn1SsSwiggy1",
                      "swiggy-socket-signaling",
                      "socket-signaling"
                    ]
                  },
                  {
                    "Ref": "ProdDomainName"
                  }
                ]
              ]
            }
          },
          {
            "Key": "ct-aws:cloudformation:stack-name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "Type": "application",
        "IpAddressType": "ipv4"
      }
    },
    "SocketSignalingV3ElasticLoadBalancingV2TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/health",
        "HealthCheckPort": "9476",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": "5",
        "HealthyThresholdCount": 5,
        "Matcher": {
          "HttpCode": "200-302"
        },
        "Port": "9476",
        "Protocol": "HTTP",
        "TargetType": "ip",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10"
          }
        ],
        "UnhealthyThresholdCount": 5,
        "Tags": [
          {
            "Key": "stack-name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${NetworkStack}-VpcId"
          }
        }
      }
    },
    "SocketSignalingV3ElasticLoadBalancingV2Listener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "SocketSignalingCertificateManagerCertificate"
            }
          }
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "SocketSignalingV3ElasticLoadBalancingV2TargetGroup"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "SocketSignalingV3ElasticLoadBalancingV2LoadBalancer"
        },
        "Port": 443,
        "Protocol": "HTTPS"
      }
    },
    "SocketSignalingV3ElasticLoadBalancingV2ListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "SocketSignalingV3ElasticLoadBalancingV2TargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/*"
            ]
          }
        ],
        "ListenerArn": {
          "Ref": "SocketSignalingV3ElasticLoadBalancingV2Listener"
        },
        "Priority": 1
      }
    }
  },
  "Outputs": {
    "SocketSignalingV3EcsClusterName": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Service-SocketSignalingV3EcsCluster"
        }
      },
      "Value": {
        "Ref": "SocketSignalingV3EcsCluster"
      }
    },
    "SocketSignalingM2PEcsClusterName": {
      "Condition":"StackIsSk1",
      "Export": {
        "Name": {
          "Fn::Sub": "${NetworkStack}-M2p-SignedCall-1-Service-SocketSignalingV3EcsClusterName"
        }
      },
      "Value": {
        "Ref": "SocketSignalingV3EcsCluster"
      }
    },
    "SigSockM2PEcsClusterName": {
      "Condition":"StackIsSk1",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Service-SigSockM2PEcsClusterName"
        }
      },
      "Value": {
        "Ref": "SocketSignalingV3EcsCluster"
      }
    },
    "SocketSignalingV3ElasticLoadBalancingV2TargetGroupArn": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Service-SocketSignalingV3ElasticLoadBalancingV2TargetGroupArn"
        }
      },
      "Value": {
        "Ref": "SocketSignalingV3ElasticLoadBalancingV2TargetGroup"
      }
    },
    "SocketSignalingMongoPasswordSecretsManagerSecret": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Service-SocketSignalingMongoPasswordSecretsManagerSecret"
        }
      },
      "Value": {
        "Ref": "SocketSignalingMongoPasswordSecretsManagerSecret"
      }
    }
  }
}
